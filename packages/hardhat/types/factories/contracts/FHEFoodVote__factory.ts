/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FHEFoodVote,
  FHEFoodVoteInterface,
} from "../../contracts/FHEFoodVote";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "foodId",
        type: "uint256",
      },
    ],
    name: "FoodVoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
    ],
    name: "getEncryptedVotes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "foodId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "encryptedVote",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b61085a806101975f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80631bbf6fdb1461004e57806342d3af4614610063578063c684706014610089578063da1f12ab146100d7575b5f5ffd5b61006161005c3660046105bd565b6100df565b005b61007661007136600461065a565b6102c8565b6040519081526020015b60405180910390f35b6100c76100973660046106bd565b600160209081525f9283526040909220815180830184018051928152908401929093019190912091525460ff1681565b6040519015158152602001610080565b612711610076565b335f908152600160205260409081902090516100fe9088908890610781565b9081526040519081900360200190205460ff16156101635760405162461bcd60e51b815260206004820152601e60248201527f416c726561647920766f74656420666f72207468697320636f756e747279000060448201526064015b60405180910390fd5b5f6101a38484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061039a92505050565b9050805f88886040516101b7929190610781565b9081526040805160209281900383018120335f908152935290822092909255610207916101e7908a908a90610781565b9081526040805160209281900383019020335f90815292529020546103ae565b5061023e5f888860405161021c929190610781565b9081526040805160209281900383019020335f818152919093522054906103bd565b50335f908152600160208190526040918290209151909190610263908a908a90610781565b908152604051908190036020018120805492151560ff199093169290921790915533907f0a44bae283819eabcac3f911ba82927090bd9e428789736a289e65a52269ba69906102b7908a908a908a90610790565b60405180910390a250505050505050565b6001600160a01b0383165f9081526001602052604080822090516102ef9085908590610781565b9081526040519081900360200190205460ff1661035a5760405162461bcd60e51b815260206004820152602360248201527f5573657220686173206e6f7420766f74656420666f72207468697320636f756e60448201526274727960e81b606482015260840161015a565b5f838360405161036b929190610781565b908152604080519182900360209081019092206001600160a01b0387165f908152925290205490509392505050565b5f6103a7838360046103cf565b9392505050565b5f6103b982306104ef565b5090565b5f6103c883836104ef565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b906104489088903390899089906004016107c7565b6020604051808303815f875af1158015610464573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104889190610836565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156104d1575f5ffd5b505af11580156104e3573d5f5f3e3d5ffd5b50505050509392505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561055d575f5ffd5b505af115801561056f573d5f5f3e3d5ffd5b50505050505050565b5f5f83601f840112610588575f5ffd5b50813567ffffffffffffffff81111561059f575f5ffd5b6020830191508360208285010111156105b6575f5ffd5b9250929050565b5f5f5f5f5f5f608087890312156105d2575f5ffd5b863567ffffffffffffffff8111156105e8575f5ffd5b6105f489828a01610578565b9097509550506020870135935060408701359250606087013567ffffffffffffffff811115610621575f5ffd5b61062d89828a01610578565b979a9699509497509295939492505050565b80356001600160a01b0381168114610655575f5ffd5b919050565b5f5f5f6040848603121561066c575f5ffd5b6106758461063f565b9250602084013567ffffffffffffffff811115610690575f5ffd5b61069c86828701610578565b9497909650939450505050565b634e487b7160e01b5f52604160045260245ffd5b5f5f604083850312156106ce575f5ffd5b6106d78361063f565b9150602083013567ffffffffffffffff8111156106f2575f5ffd5b8301601f81018513610702575f5ffd5b803567ffffffffffffffff81111561071c5761071c6106a9565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561074b5761074b6106a9565b604052818152828201602001871015610762575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b818382375f9101908152919050565b60408152826040820152828460608301375f606084830101525f6060601f19601f8601168301019050826020830152949350505050565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f8301168401019150506054831061082757634e487b7160e01b5f52602160045260245ffd5b82606083015295945050505050565b5f60208284031215610846575f5ffd5b505191905056fea164736f6c634300081b000a";

type FHEFoodVoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEFoodVoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEFoodVote__factory extends ContractFactory {
  constructor(...args: FHEFoodVoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEFoodVote & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEFoodVote__factory {
    return super.connect(runner) as FHEFoodVote__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEFoodVoteInterface {
    return new Interface(_abi) as FHEFoodVoteInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHEFoodVote {
    return new Contract(address, _abi, runner) as unknown as FHEFoodVote;
  }
}
